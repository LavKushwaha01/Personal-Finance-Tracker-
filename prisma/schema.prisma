// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
   id      Int  @id @default(autoincrement())
  name      String?
  email     String  @unique 
  password  String?  
  image     String?
  createdAt DateTime @default(now())
  expanses Expenses[]
  income Income[]
  monthly MonthlySummary[]
  food food[]
  education education[]
  emi EMI[]
  rent Rent[]
  others Others[]
  dailystats dailystats[]

}

model Expenses{
    id        Int      @id @default(autoincrement())
     types String
     amount Int
     startTime DateTime 
     userId Int 
     user        User   @relation(fields: [userId], references: [id])
}

model Income{
   id        Int      @id @default(autoincrement())
  source String
  userId Int 
  amount Int
  startTime DateTime 
  user        User   @relation(fields: [userId], references: [id])
}
  
model MonthlySummary {
  id        Int      @id @default(autoincrement())
  month     Int
  year   Int
  totalExpenses     Int
  totalIncome Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
   @@unique([userId, month, year], name: "userId_month_year")
}

model food {
  id Int  @id @default(autoincrement())
  amount Int
  month     Int
  year   Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int   
   @@unique([userId, month, year], name: "userId_month_year")
}

model education {
  id Int  @id @default(autoincrement())
  amount Int
  month     Int
  year   Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  @@unique([userId, month, year], name: "userId_month_year")
}

model EMI {
  id Int  @id @default(autoincrement())
  amount Int
  month     Int
  year   Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  @@unique([userId, month, year], name: "userId_month_year")
}

model Rent {
  id Int  @id @default(autoincrement())
  amount Int
  month     Int
  year   Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  @@unique([userId, month, year], name: "userId_month_year")
}

model Others {
  id Int  @id @default(autoincrement())
  amount Int
  month     Int
  year   Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  @@unique([userId, month, year], name: "userId_month_year")
}

model dailystats {
  id Int @id @default(autoincrement())
  userId Int
  user      User     @relation(fields: [userId], references: [id])
  income Int
  expense Int
  date DateTime @default(now()) @db.Date
  @@unique([userId, date], name: "userId_date")
}
